/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package design;

import bean.Db_connection;
import static design.WineDistribution.formatDate;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Arka
 */
public class OnshopSetPrice extends javax.swing.JPanel {

    /**
     * Creates new form OnshopSetlPrice
     */
    public OnshopSetPrice() {
        initComponents();
        this.FillCat();
    }

    public void FillCat()
    {
        try 
        {
            Connection con = Db_connection.getConnection();
            PreparedStatement ps = con.prepareStatement("SELECT distinct(cat) FROM ddesc a inner join onshopstock b on a.dcode = b.dcode and a.dcode " +
                                                        "in (select dcode from onshopstock where slno in (select max(slno) from onshopstock group by dcode))");
            ResultSet rs = ps.executeQuery();
            while(rs.next())
            {
                cat.addItem(rs.getString(1).trim());
            }
            rs.close();
            ps.close();
            con.close();
        } 
        catch (SQLException ex) 
        {
            Logger.getLogger(AddItemOnShop.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void clear()
    {
        barcode.setText("");
        barcode.setEditable(true);
        cat.setEnabled(true);
        cat.setSelectedItem("-Select-");
        brname.removeAllItems();
        brname.addItem("-Select-");
        brname.setEnabled(false);
        measureml.removeAllItems();
        measureml.addItem("-Select-");
        price30ml.setText("");
        price30ml.setEditable(false);
        barcode.requestFocus(true);
        jButton1.setEnabled(false);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel10 = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        price30ml = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        cat = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        brname = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        measureml = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        barcode = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        priceTable = new javax.swing.JTable();

        jPanel10.setBackground(new java.awt.Color(0, 0, 0));

        jLabel21.setBackground(new java.awt.Color(0, 0, 0));
        jLabel21.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(255, 255, 255));
        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel21.setText("Set Price For 30 ML Peg");

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel21, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
        );

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel6.setText("Barcode");

        price30ml.setEditable(false);
        price30ml.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        price30ml.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                price30mlKeyPressed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel5.setText("Category");

        cat.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        cat.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-Select-" }));
        cat.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                catItemStateChanged(evt);
            }
        });
        cat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                catMouseClicked(evt);
            }
        });
        cat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                catActionPerformed(evt);
            }
        });
        cat.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                catKeyPressed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel7.setText("Brand Name");

        brname.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        brname.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-Select-" }));
        brname.setEnabled(false);
        brname.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                brnameItemStateChanged(evt);
            }
        });
        brname.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                brnameMouseClicked(evt);
            }
        });
        brname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                brnameKeyPressed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel10.setText("Price / 30ML");

        measureml.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        measureml.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-Select-" }));
        measureml.setEnabled(false);
        measureml.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                measuremlItemStateChanged(evt);
            }
        });
        measureml.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                measuremlKeyPressed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel11.setText("Measure (ML)");

        barcode.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        barcode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                barcodeKeyPressed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        jButton1.setText("Submit");
        jButton1.setEnabled(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jButton1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton1KeyPressed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        jButton3.setText("Clear");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        priceTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Barcode", "Category", "Brand name", "Bottle Quantity", "Price / 30ML"
            }
        ));
        jScrollPane1.setViewportView(priceTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(100, 100, 100)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 113, Short.MAX_VALUE)
                                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(brname, 0, 329, Short.MAX_VALUE)
                            .addComponent(cat, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(barcode))
                        .addGap(80, 80, 80)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, 119, Short.MAX_VALUE)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(price30ml)
                                    .addComponent(measureml, 0, 154, Short.MAX_VALUE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(23, 23, 23)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(37, 37, 37))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(18, 18, 18)
                            .addComponent(jLabel6))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addGap(15, 15, 15)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(measureml, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(barcode, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(price30ml, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(brname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton1)
                        .addComponent(jButton3)))
                .addGap(30, 30, 30)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 403, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(65, 65, 65))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {barcode, brname, cat});

    }// </editor-fold>//GEN-END:initComponents

    private void catActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_catActionPerformed
/*
        try{
            Connection con=Db_connection.getConnection();
            PreparedStatement ps= con.prepareStatement("Select bname from dcode where cat1='"+cat.getSelectedItem().toString()+"'");
            ResultSet rs=ps.executeQuery();
            while(rs.next())
            {
                // if(rs.toString().eq)
                brname.addItem(rs.toString());
            }
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
*/
    }//GEN-LAST:event_catActionPerformed

    private void catKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_catKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_catKeyPressed

    private void brnameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_brnameMouseClicked
/*        // TODO add your handling code here:

        try{
            Connection con=Db_connection.getConnection();
            PreparedStatement ps= con.prepareStatement("Select bname from dcode where cat1='"+cat.getSelectedItem().toString()+"'");
            ResultSet rs=ps.executeQuery();
            while(rs.next())
            {
                // if(rs.toString().eq)
                brname.addItem(rs.toString());
            }
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
*/
    }//GEN-LAST:event_brnameMouseClicked

    private void brnameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_brnameKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_brnameKeyPressed

    private void measuremlKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_measuremlKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_measuremlKeyPressed

    private void catItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_catItemStateChanged
        if (evt.getStateChange() == evt.SELECTED) 
        {
            String item = evt.getItem().toString().trim();
            if(!item.equals("-Select-"))
            {
                brname.removeAllItems();
                brname.addItem("-Select-");
                try 
                {
                    Connection con = Db_connection.getConnection();
                    PreparedStatement ps = con.prepareStatement("SELECT distinct(bname) FROM ddesc a inner join onshopstock b on a.dcode = b.dcode and a.dcode " +
                                                                "in (select dcode from onshopstock where slno in(select max(slno) from onshopstock group by dcode)) and cat = ?");
                    ps.setString(1, item);
                    ResultSet rs = ps.executeQuery();
                    while(rs.next())
                    {
                        brname.addItem(rs.getString(1).trim());
                    }
                    brname.setEnabled(true);
                    brname.requestFocus();
                    measureml.setSelectedItem("-Select-");
                    rs.close();
                    ps.close();
                    con.close();
                } 
                catch (SQLException ex) 
                {
                    Logger.getLogger(AddItemOnShop.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_catItemStateChanged

    private void catMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_catMouseClicked
        clear();
        // TODO add your handling code here:
    }//GEN-LAST:event_catMouseClicked

    private void brnameItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_brnameItemStateChanged
        if (evt.getStateChange() == evt.SELECTED) 
        {
            String item1 = cat.getSelectedItem().toString().trim();
            String item2 = evt.getItem().toString().trim();
            
            if(!item2.equals("-Select-"))
            {
                measureml.removeAllItems();
                measureml.addItem("-Select-");
                try 
                {
                    Connection con = Db_connection.getConnection();
                    PreparedStatement ps = con.prepareStatement("SELECT distinct(mlpb) FROM ddesc a inner join onshopstock b on a.dcode = b.dcode and a.dcode " +
                                                                "in (select dcode from onshopstock where slno in(select max(slno) from onshopstock group by dcode)) and cat = ? and bname = ?");
                    ps.setString(1, item1);
                    ps.setString(2, item2);
                    ResultSet rs = ps.executeQuery();
                    while(rs.next())
                    {
                        measureml.addItem(rs.getString(1).trim());
                    }
                    measureml.setEnabled(true);
                    measureml.requestFocus();
                    rs.close();
                    ps.close();
                    con.close();
                } 
                catch (SQLException ex) 
                {
                    Logger.getLogger(AddItemOnShop.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            else
            {
                measureml.setSelectedItem("-Select-");
                measureml.setEnabled(false);
            }
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_brnameItemStateChanged
    Long mlinstock = (long) 0;
    private void measuremlItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_measuremlItemStateChanged
        if (evt.getStateChange() == evt.SELECTED) 
        {
            String item1 = cat.getSelectedItem().toString().trim();
            String item2 = brname.getSelectedItem().toString().trim();
            String item3 = evt.getItem().toString().trim();
                        
            if(!item3.equals("-Select-"))
            {
                try 
                {
                    Connection con = Db_connection.getConnection();
                    PreparedStatement ps = con.prepareStatement("SELECT a.dcode, mlinstock FROM ddesc a inner join onshopstock b on a.dcode = b.dcode and b.slno " +
                                                                "in (select max(slno) from onshopstock group by dcode) and cat = ? and bname = ? and mlpb = ?");
                    ps.setString(1, item1);
                    ps.setString(2, item2);
                    ps.setInt(3, Integer.parseInt(item3));
                    ResultSet rs = ps.executeQuery();
                    if(rs.next())
                    {
                        barcode.setText(rs.getString("dcode"));
                        mlinstock = rs.getLong("mlinstock");
                        price30ml.setEditable(true);
                        price30ml.requestFocus();
                    }
                    else
                    {
                        cat.setSelectedItem("-Select-");
                        brname.setEnabled(false);
                        brname.setSelectedItem("-Select-");
                        measureml.setEnabled(false);
                        measureml.setSelectedItem("-Select-");
                        price30ml.setEditable(true);
                        price30ml.setText("");
                        jButton1.setEnabled(false);

                        JOptionPane.showMessageDialog(null, "<html><h3>Item Not Found<br>Try Again</html>");
                        
                        barcode.requestFocus();
                        barcode.setText("");
                    }
                    rs.close();
                    ps.close();
                    con.close();
                } 
                catch (SQLException ex) 
                {
                    Logger.getLogger(AddItemOnShop.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            else
            {
                price30ml.setEditable(true);
                price30ml.setText("");
                jButton1.setEnabled(false);
            }
        }        

        // TODO add your handling code here:
    }//GEN-LAST:event_measuremlItemStateChanged

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        clear();
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Submit();
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void price30mlKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_price30mlKeyPressed
        if(!price30ml.getText().trim().equals("") && (evt.getKeyCode() == KeyEvent.VK_DOWN || evt.getKeyCode() == KeyEvent.VK_ENTER || evt.getKeyCode() == KeyEvent.VK_TAB))
        {            
            jButton1.setEnabled(true);
            jButton1.requestFocus();
        } 
        // TODO add your handling code here:
    }//GEN-LAST:event_price30mlKeyPressed

    private void barcodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_barcodeKeyPressed
        if(!barcode.getText().trim().equals("") && barcode.isEditable() && (evt.getKeyCode() == KeyEvent.VK_DOWN || evt.getKeyCode() == KeyEvent.VK_ENTER || evt.getKeyCode() == KeyEvent.VK_TAB))
        {
            try 
            {
                Connection con = Db_connection.getConnection();
                PreparedStatement ps = con.prepareStatement("SELECT * FROM ddesc a inner join onshopstock b on a.dcode = b.dcode " +
                                                            "and b.slno in (select max(slno) from onshopstock group by dcode) and a.dcode = ? ");
                ps.setString(1, barcode.getText().trim());
                ResultSet rs = ps.executeQuery();
                if(rs.next())
                {
                    cat.setSelectedItem(rs.getString("cat"));
                    cat.setEnabled(false);
                    //brname.removeAllItems();
                    //brname.addItem(rs.getString("bname"));
                    brname.setSelectedItem(rs.getString("bname"));
                    brname.setEnabled(false);
                    //measureml.removeAllItems();
                    //measureml.addItem(rs.getString("mlpb"));
                    measureml.setSelectedItem(rs.getString("mlpb"));
                    measureml.setEnabled(false);
                    barcode.setEditable(false);
                    price30ml.setEditable(true);
                    price30ml.requestFocus();
                }
                else
                {
                    JOptionPane.showMessageDialog(null, "<html><h3>Bar Code Not Found<br>Please Select By Category</html>");
                    clear();
                }
                rs.close();
                ps.close();
                con.close();
            }
            catch (SQLException ex) 
            {
                Logger.getLogger(MainStockEntry.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_barcodeKeyPressed

    private void jButton1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton1KeyPressed
        if((evt.getKeyCode() == KeyEvent.VK_DOWN || evt.getKeyCode() == KeyEvent.VK_ENTER || evt.getKeyCode() == KeyEvent.VK_TAB))
        {            
            Submit();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1KeyPressed

    public void Submit()
    {
      
      try
        { 
            String tdate= new SimpleDateFormat("yyyy-MM-dd").format(new Date());
            
            Connection con=Db_connection.getConnection();
            
                         
                PreparedStatement onPs = con.prepareStatement("insert into onshopstock(date, dcode, qtyml, mlinstock, price30ml, ttype, billno)values(?,?,?,?,?,?,?)");
                onPs.setString(1, tdate);
                onPs.setString(2, barcode.getText().trim());
                onPs.setLong(3, 0);
                onPs.setLong(4, mlinstock);
                onPs.setDouble(5, Double.parseDouble(price30ml.getText()));
                onPs.setInt(6, 1);
                onPs.setInt(7, -1);
                int onRs = onPs.executeUpdate();
                onPs.close();
                            
                if(onRs == 1)
                {
                    DefaultTableModel model = null;
                    model = (DefaultTableModel) priceTable.getModel();
                    model.insertRow(model.getRowCount() , new Object[]{barcode.getText().trim(), cat.getSelectedItem().toString().trim(), brname.getSelectedItem().toString().trim(), measureml.getSelectedItem().toString().trim(), price30ml.getText().trim()});
                    JOptionPane.showMessageDialog(null, "<html><h3>Price Updation Successful</html>");
                    clear();
                }
                else
                    JOptionPane.showMessageDialog(null, "<html><h3><center>Price Updation Unsuccessful<br>Please Try Again</html>");
            
            con.close();
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, "<html>Data Can Not Be Inserted<br>Some Error Occoured<br>Please Try Again</html>");
            e.printStackTrace();
        }
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JTextField barcode;
    private javax.swing.JComboBox<String> brname;
    private javax.swing.JComboBox<String> cat;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> measureml;
    public javax.swing.JTextField price30ml;
    private javax.swing.JTable priceTable;
    // End of variables declaration//GEN-END:variables
}
