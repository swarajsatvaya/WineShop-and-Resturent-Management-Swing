/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package design;

import bean.Db_connection;
import bean.ObjDao;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Arka
 */
public class AddItemOffShop extends javax.swing.JPanel {

    /**
     * Creates new form AddItemOffShop
     */
    public AddItemOffShop() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        barcode = new javax.swing.JTextField();
        cat = new javax.swing.JTextField();
        brname = new javax.swing.JTextField();
        qty = new javax.swing.JTextField();
        tprice = new javax.swing.JTextField();
        mlpb = new javax.swing.JTextField();
        rate = new javax.swing.JTextField();

        jLabel6.setBackground(new java.awt.Color(255, 255, 255));
        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 255));
        jLabel6.setText("- Remove Row");
        jLabel6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel6MouseClicked(evt);
            }
        });

        jLabel7.setBackground(new java.awt.Color(255, 255, 255));
        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 255));
        jLabel7.setText("+Add Row");
        jLabel7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel7MouseClicked(evt);
            }
        });

        barcode.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        barcode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                barcodeKeyPressed(evt);
            }
        });

        cat.setEditable(false);
        cat.setBackground(new java.awt.Color(255, 255, 255));
        cat.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N

        brname.setEditable(false);
        brname.setBackground(new java.awt.Color(255, 255, 255));
        brname.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N

        qty.setEditable(false);
        qty.setBackground(new java.awt.Color(255, 255, 255));
        qty.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        qty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                qtyActionPerformed(evt);
            }
        });
        qty.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                qtyKeyPressed(evt);
            }
        });

        tprice.setEditable(false);
        tprice.setBackground(new java.awt.Color(255, 255, 255));
        tprice.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N

        mlpb.setEditable(false);
        mlpb.setBackground(new java.awt.Color(255, 255, 255));
        mlpb.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N

        rate.setEditable(false);
        rate.setBackground(new java.awt.Color(255, 255, 255));
        rate.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(barcode, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cat, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(brname, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(mlpb, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(qty, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rate, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tprice, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel6)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(barcode)
                    .addComponent(brname)
                    .addComponent(cat)
                    .addComponent(mlpb)
                    .addComponent(qty)
                    .addComponent(rate)
                    .addComponent(tprice))
                .addGap(0, 0, 0))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {barcode, brname, cat, jLabel6, jLabel7, mlpb, qty, rate, tprice});

    }// </editor-fold>//GEN-END:initComponents

    private void jLabel6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel6MouseClicked
        // TODO add your handling code here:
       ObjDao.of.RemoveOff();
    
    }//GEN-LAST:event_jLabel6MouseClicked

    private void jLabel7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel7MouseClicked
        // TODO add your handling code here:
        ObjDao.of.Add();
    }//GEN-LAST:event_jLabel7MouseClicked
    
    public int stock = 0;
    public void receiveItem()
    {
        try 
        {
            Connection con = Db_connection.getConnection();
            PreparedStatement ps = con.prepareStatement("SELECT * FROM ddesc a inner join offshopstock b on a.dcode = b.dcode and b.slno in \n" +
                                                        "(select max(slno) from offshopstock where dcode = ? and instock>0 group by dcode)");
            ps.setString(1, barcode.getText().trim());
            ResultSet rs = ps.executeQuery();
            if(rs.next())
            {
                cat.setText(rs.getString("cat"));
                brname.setText(rs.getString("bname"));
                mlpb.setText(rs.getString("mlpb"));
                rate.setText(rs.getString("pricepb"));
                qty.setEditable(true);
                qty.requestFocus();
                stock = rs.getInt("instock");
                //System.out.println(stock);
            }
            else
            {
                JOptionPane.showMessageDialog(null, "<html>Item Does Not Exists Or Not In Stock</html>");
                stock = 0;
                qty.setEditable(false);
                qty.setText("");
                barcode.setText("");
                cat.setText("");
                brname.setText("");
                mlpb.setText("");
                rate.setText("");
            }
            rs.close();
            ps.close();
            con.close();
        } 
        catch (SQLException ex) 
        {
            JOptionPane.showMessageDialog(null, "<html>Some Error Occoured</html>");
            stock = 0;
            qty.setEditable(false);
            Logger.getLogger(AddItemOffShop.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void barcodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_barcodeKeyPressed
        if(!barcode.getText().trim().equals("") && (evt.getKeyCode() == KeyEvent.VK_DOWN || evt.getKeyCode() == KeyEvent.VK_ENTER || evt.getKeyCode() == KeyEvent.VK_TAB))
        {
            receiveItem();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_barcodeKeyPressed

    private void qtyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_qtyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_qtyActionPerformed

    private void qtyKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_qtyKeyPressed
        if(!qty.getText().trim().equals("") && (evt.getKeyCode() == KeyEvent.VK_DOWN || evt.getKeyCode() == KeyEvent.VK_ENTER || evt.getKeyCode() == KeyEvent.VK_TAB))
        {
            if(Integer.parseInt(qty.getText()) > stock)
            {
                JOptionPane.showMessageDialog(null, "<html>Entered Quantity Not In Stock</html>");
                //stock = 0;
                qty.setText("");
                tprice.setText("");
            }
            else
            {
                tprice.setText(String.valueOf(Double.parseDouble(rate.getText().trim()) * Integer.parseInt(qty.getText())));
                ObjDao.of.Add();
            }
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_qtyKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JTextField barcode;
    public javax.swing.JTextField brname;
    public javax.swing.JTextField cat;
    public javax.swing.JLabel jLabel6;
    public javax.swing.JLabel jLabel7;
    public javax.swing.JTextField mlpb;
    public javax.swing.JTextField qty;
    public javax.swing.JTextField rate;
    public javax.swing.JTextField tprice;
    // End of variables declaration//GEN-END:variables
}
